import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable SortFilterProxyModel 1.0 .'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "AllOfFilter"
        defaultProperty: "filters"
        prototype: "FilterContainerFilter"
        exports: ["SortFilterProxyModel/AllOf 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "AnyOfFilter"
        defaultProperty: "filters"
        prototype: "FilterContainerFilter"
        exports: ["SortFilterProxyModel/AnyOf 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "ExpressionFilter"
        prototype: "Filter"
        exports: ["SortFilterProxyModel/ExpressionFilter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "expression"; type: "QQmlScriptString" }
    }
    Component {
        name: "ExpressionRole"
        prototype: "SingleRole"
        exports: ["SortFilterProxyModel/ExpressionRole 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "expression"; type: "QQmlScriptString" }
    }
    Component {
        name: "ExpressionSorter"
        prototype: "Sorter"
        exports: ["SortFilterProxyModel/ExpressionSorter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "expression"; type: "QQmlScriptString" }
    }
    Component {
        name: "Filter"
        prototype: "QObject"
        exports: ["SortFilterProxyModel/Filter 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "enabled"; type: "bool" }
        Property { name: "inverted"; type: "bool" }
        Signal { name: "invalidated" }
    }
    Component {
        name: "FilterContainerAttached"
        prototype: "QObject"
        exports: ["SortFilterProxyModel/FilterContainer 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "container"; type: "QObject"; isPointer: true }
    }
    Component {
        name: "FilterContainerFilter"
        defaultProperty: "filters"
        prototype: "Filter"
        Property { name: "filters"; type: "Filter"; isList: true; isReadonly: true }
    }
    Component {
        name: "FilterRole"
        defaultProperty: "filters"
        prototype: "SingleRole"
        exports: ["SortFilterProxyModel/FilterRole 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "filters"; type: "Filter"; isList: true; isReadonly: true }
    }
    Component {
        name: "FilterSorter"
        defaultProperty: "filters"
        prototype: "Sorter"
        exports: ["SortFilterProxyModel/FilterSorter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "filters"; type: "Filter"; isList: true; isReadonly: true }
    }
    Component {
        name: "IndexFilter"
        prototype: "Filter"
        exports: ["SortFilterProxyModel/IndexFilter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "minimumIndex"; type: "QVariant" }
        Property { name: "maximumIndex"; type: "QVariant" }
    }
    Component {
        name: "JoinRole"
        prototype: "SingleRole"
        exports: ["SortFilterProxyModel/JoinRole 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "roleNames"; type: "QStringList" }
        Property { name: "separator"; type: "string" }
    }
    Component {
        name: "ProxyRole"
        prototype: "QObject"
        exports: ["SortFilterProxyModel/ProxyRole 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Signal { name: "invalidated" }
        Signal { name: "namesAboutToBeChanged" }
        Signal { name: "namesChanged" }
    }
    Component {
        name: "QAbstractItemModel"
        prototype: "QObject"
        Enum {
            name: "LayoutChangeHint"
            values: {
                "NoLayoutChangeHint": 0,
                "VerticalSortHint": 1,
                "HorizontalSortHint": 2
            }
        }
        Enum {
            name: "CheckIndexOption"
            values: {
                "NoOption": 0,
                "IndexIsValid": 1,
                "DoNotUseParent": 2,
                "ParentIsInvalid": 4
            }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Signal {
            name: "headerDataChanged"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutChanged" }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutAboutToBeChanged" }
        Signal {
            name: "rowsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal { name: "modelAboutToBeReset" }
        Signal { name: "modelReset" }
        Signal {
            name: "rowsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationRow"; type: "int" }
        }
        Signal {
            name: "rowsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "row"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationColumn"; type: "int" }
        }
        Signal {
            name: "columnsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "submit"; type: "bool" }
        Method { name: "revert" }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "sibling"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "idx"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "fetchMore"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "canFetchMore"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "flags"
            type: "Qt::ItemFlags"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
            Parameter { name: "flags"; type: "Qt::MatchFlags" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        name: "QAbstractProxyModel"
        prototype: "QAbstractItemModel"
        Property { name: "sourceModel"; type: "QAbstractItemModel"; isPointer: true }
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapSelectionToSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
        Method {
            name: "mapSelectionFromSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
    }
    Component {
        name: "QQmlSortFilterProxyModel"
        prototype: "QSortFilterProxyModel"
        exports: ["SortFilterProxyModel/SortFilterProxyModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "PatternSyntax"
            values: {
                "RegExp": 0,
                "Wildcard": 1,
                "FixedString": 2,
                "RegExp2": 3,
                "WildcardUnix": 4,
                "W3CXmlSchema11": 5
            }
        }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "delayed"; type: "bool" }
        Property { name: "filterRoleName"; type: "string" }
        Property { name: "filterPattern"; type: "string" }
        Property { name: "filterPatternSyntax"; type: "PatternSyntax" }
        Property { name: "filterValue"; type: "QVariant" }
        Property { name: "sortRoleName"; type: "string" }
        Property { name: "ascendingSortOrder"; type: "bool" }
        Property { name: "filters"; type: "Filter"; isList: true; isReadonly: true }
        Property { name: "sorters"; type: "Sorter"; isList: true; isReadonly: true }
        Property { name: "proxyRoles"; type: "ProxyRole"; isList: true; isReadonly: true }
        Method {
            name: "roleForName"
            type: "int"
            Parameter { name: "roleName"; type: "string" }
        }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "roleName"; type: "string" }
        }
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapToSource"
            type: "int"
            Parameter { name: "proxyRow"; type: "int" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "int"
            Parameter { name: "sourceRow"; type: "int" }
        }
    }
    Component {
        name: "QSortFilterProxyModel"
        prototype: "QAbstractProxyModel"
        Property { name: "filterRegExp"; type: "QRegExp" }
        Property { name: "filterRegularExpression"; type: "QRegularExpression" }
        Property { name: "filterKeyColumn"; type: "int" }
        Property { name: "dynamicSortFilter"; type: "bool" }
        Property { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "isSortLocaleAware"; type: "bool" }
        Property { name: "sortRole"; type: "int" }
        Property { name: "filterRole"; type: "int" }
        Property { name: "recursiveFilteringEnabled"; type: "bool" }
        Signal {
            name: "dynamicSortFilterChanged"
            Parameter { name: "dynamicSortFilter"; type: "bool" }
        }
        Signal {
            name: "filterCaseSensitivityChanged"
            Parameter { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        }
        Signal {
            name: "sortCaseSensitivityChanged"
            Parameter { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        }
        Signal {
            name: "sortLocaleAwareChanged"
            Parameter { name: "sortLocaleAware"; type: "bool" }
        }
        Signal {
            name: "sortRoleChanged"
            Parameter { name: "sortRole"; type: "int" }
        }
        Signal {
            name: "filterRoleChanged"
            Parameter { name: "filterRole"; type: "int" }
        }
        Signal {
            name: "recursiveFilteringEnabledChanged"
            Parameter { name: "recursiveFilteringEnabled"; type: "bool" }
        }
        Method {
            name: "setFilterRegExp"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterRegExp"
            Parameter { name: "regExp"; type: "QRegExp" }
        }
        Method {
            name: "setFilterRegularExpression"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterRegularExpression"
            Parameter { name: "regularExpression"; type: "QRegularExpression" }
        }
        Method {
            name: "setFilterWildcard"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterFixedString"
            Parameter { name: "pattern"; type: "string" }
        }
        Method { name: "clear" }
        Method { name: "invalidate" }
    }
    Component {
        name: "RangeFilter"
        prototype: "RoleFilter"
        exports: ["SortFilterProxyModel/RangeFilter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "minimumValue"; type: "QVariant" }
        Property { name: "minimumInclusive"; type: "bool" }
        Property { name: "maximumValue"; type: "QVariant" }
        Property { name: "maximumInclusive"; type: "bool" }
    }
    Component {
        name: "RegExpFilter"
        prototype: "RoleFilter"
        exports: ["SortFilterProxyModel/RegExpFilter 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "PatternSyntax"
            values: {
                "RegExp": 0,
                "Wildcard": 1,
                "FixedString": 2,
                "RegExp2": 3,
                "WildcardUnix": 4,
                "W3CXmlSchema11": 5
            }
        }
        Property { name: "pattern"; type: "string" }
        Property { name: "syntax"; type: "PatternSyntax" }
        Property { name: "caseSensitivity"; type: "Qt::CaseSensitivity" }
    }
    Component {
        name: "RegExpRole"
        prototype: "ProxyRole"
        exports: ["SortFilterProxyModel/RegExpRole 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "roleName"; type: "string" }
        Property { name: "pattern"; type: "string" }
        Property { name: "caseSensitivity"; type: "Qt::CaseSensitivity" }
    }
    Component {
        name: "RoleFilter"
        prototype: "Filter"
        Property { name: "roleName"; type: "string" }
    }
    Component {
        name: "RoleSorter"
        prototype: "Sorter"
        exports: ["SortFilterProxyModel/RoleSorter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "roleName"; type: "string" }
    }
    Component {
        name: "SingleRole"
        prototype: "ProxyRole"
        Property { name: "name"; type: "string" }
    }
    Component {
        name: "Sorter"
        prototype: "QObject"
        exports: ["SortFilterProxyModel/Sorter 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "enabled"; type: "bool" }
        Property { name: "ascendingOrder"; type: "bool" }
        Property { name: "sortOrder"; type: "Qt::SortOrder" }
        Property { name: "priority"; type: "int" }
        Signal { name: "invalidated" }
    }
    Component {
        name: "SorterContainerAttached"
        prototype: "QObject"
        exports: ["SortFilterProxyModel/SorterContainer 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "container"; type: "QObject"; isPointer: true }
    }
    Component {
        name: "StringSorter"
        prototype: "RoleSorter"
        exports: ["SortFilterProxyModel/StringSorter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "caseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "ignorePunctation"; type: "bool" }
        Property { name: "locale"; type: "QLocale" }
        Property { name: "numericMode"; type: "bool" }
    }
    Component {
        name: "SwitchRole"
        defaultProperty: "filters"
        prototype: "SingleRole"
        exports: ["SortFilterProxyModel/SwitchRole 1.0"]
        exportMetaObjectRevisions: [0]
        attachedType: "SwitchRoleAttached"
        Property { name: "defaultRoleName"; type: "string" }
        Property { name: "defaultValue"; type: "QVariant" }
        Property { name: "filters"; type: "Filter"; isList: true; isReadonly: true }
    }
    Component {
        name: "SwitchRoleAttached"
        prototype: "QObject"
        Property { name: "value"; type: "QVariant" }
    }
    Component {
        name: "ValueFilter"
        prototype: "RoleFilter"
        exports: ["SortFilterProxyModel/ValueFilter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "value"; type: "QVariant" }
    }
}
